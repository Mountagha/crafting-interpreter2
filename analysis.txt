Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 97.86      0.45     0.45    59517     0.01     0.01  isLineAdded
  2.17      0.46     0.01    10002     0.00     0.03  writeConstant
  0.00      0.46     0.00   149348     0.00     0.00  peek
  0.00      0.46     0.00   109317     0.00     0.00  advance
  0.00      0.46     0.00    90059     0.00     0.00  isAlpha
  0.00      0.46     0.00    60029     0.00     0.00  check
  0.00      0.46     0.00    60027     0.00     0.00  match
  0.00      0.46     0.00    59517     0.00     0.01  writeChunk
  0.00      0.46     0.00    59264     0.00     0.00  isDigit
  0.00      0.46     0.00    40036     0.00     0.00  isAtEnd
  0.00      0.46     0.00    40023     0.00     0.00  advance
  0.00      0.46     0.00    40023     0.00     0.00  makeToken
  0.00      0.46     0.00    40023     0.00     0.00  noneToken
  0.00      0.46     0.00    40023     0.00     0.00  scanToken
  0.00      0.46     0.00    40023     0.00     0.00  skipWhitespace
  0.00      0.46     0.00    40019     0.00     0.00  getRule
  0.00      0.46     0.00    30025     0.00     0.00  currentChunk
  0.00      0.46     0.00    20023     0.00     0.00  push
  0.00      0.46     0.00    20021     0.00     0.00  pop
  0.00      0.46     0.00    20019     0.00     0.01  emitByte
  0.00      0.46     0.00    20006     0.00     0.02  parsePrecedence
  0.00      0.46     0.00    10008     0.00     0.00  checkKeyword
  0.00      0.46     0.00    10008     0.00     0.00  identifier
  0.00      0.46     0.00    10008     0.00     0.00  identifierType
  0.00      0.46     0.00    10007     0.00     0.00  consume
  0.00      0.46     0.00    10006     0.00     0.00  peek
  0.00      0.46     0.00    10006     0.00     0.00  writeValueArray
  0.00      0.46     0.00    10004     0.00     0.05  declaration
  0.00      0.46     0.00    10004     0.00     0.04  expression
  0.00      0.46     0.00    10004     0.00     0.00  numToValue
  0.00      0.46     0.00    10003     0.00     0.05  printStatement
  0.00      0.46     0.00    10003     0.00     0.00  printValue
  0.00      0.46     0.00    10003     0.00     0.05  statement
  0.00      0.46     0.00    10003     0.00     0.00  valueToNum
  0.00      0.46     0.00    10002     0.00     0.03  emitConstant
  0.00      0.46     0.00    10002     0.00     0.00  valueToNum
  0.00      0.46     0.00    10001     0.00     0.00  numToValue
  0.00      0.46     0.00    10001     0.00     0.03  number
  0.00      0.46     0.00    10001     0.00     0.00  number
  0.00      0.46     0.00    10001     0.00     0.01  unary
  0.00      0.46     0.00       70     0.00     0.00  reallocate
  0.00      0.46     0.00        9     0.00     0.00  findEntry
  0.00      0.46     0.00        7     0.00     0.00  allocateObject
  0.00      0.46     0.00        7     0.00     0.00  copyString
  0.00      0.46     0.00        7     0.00     0.00  freeObject
  0.00      0.46     0.00        7     0.00     0.00  hashString
  0.00      0.46     0.00        7     0.00     0.00  tableFindString
  0.00      0.46     0.00        6     0.00     0.02  emitBytes
  0.00      0.46     0.00        6     0.00     0.00  initValueArray
  0.00      0.46     0.00        6     0.00     0.00  tableSet
  0.00      0.46     0.00        4     0.00     0.00  addConstant
  0.00      0.46     0.00        4     0.00     0.00  allocateString
  0.00      0.46     0.00        4     0.00     0.00  identifierConstant
  0.00      0.46     0.00        4     0.00     0.00  initTable
  0.00      0.46     0.00        4     0.00     0.00  makeConstant
  0.00      0.46     0.00        3     0.00     0.00  identifiersEqual
  0.00      0.46     0.00        3     0.00     0.02  namedVariable
  0.00      0.46     0.00        3     0.00     0.00  resolveLocal
  0.00      0.46     0.00        3     0.00     0.00  resolveUpvalue
  0.00      0.46     0.00        3     0.00     0.00  tableGet
  0.00      0.46     0.00        3     0.00     0.02  variable
  0.00      0.46     0.00        2     0.00     0.00  adjustCapacity
  0.00      0.46     0.00        2     0.00     0.00  argumentList
  0.00      0.46     0.00        2     0.00     0.02  call
  0.00      0.46     0.00        2     0.00     0.00  callValue
  0.00      0.46     0.00        2     0.00     0.00  clockNative
  0.00      0.46     0.00        2     0.00     0.00  freeTable
  0.00      0.46     0.00        2     0.00     0.00  freeValueArray
  0.00      0.46     0.00        2     0.00     0.00  initChunk
  0.00      0.46     0.00        1     0.00     0.01  binary
  0.00      0.46     0.00        1     0.00     0.00  call
  0.00      0.46     0.00        1     0.00     0.00  closeUpvalues
  0.00      0.46     0.00        1     0.00   460.17  compile
  0.00      0.46     0.00        1     0.00     0.00  declareVariable
  0.00      0.46     0.00        1     0.00     0.00  defineNative
  0.00      0.46     0.00        1     0.00     0.02  defineVariable
  0.00      0.46     0.00        1     0.00     0.02  emitReturn
  0.00      0.46     0.00        1     0.00     0.02  endCompiler
  0.00      0.46     0.00        1     0.00     0.00  freeChunk
  0.00      0.46     0.00        1     0.00     0.00  freeObjects
  0.00      0.46     0.00        1     0.00     0.00  freeVM
  0.00      0.46     0.00        1     0.00     0.00  initCompiler
  0.00      0.46     0.00        1     0.00     0.00  initScanner
  0.00      0.46     0.00        1     0.00     0.00  initVM
  0.00      0.46     0.00        1     0.00   460.17  interpret
  0.00      0.46     0.00        1     0.00     0.00  match
  0.00      0.46     0.00        1     0.00     0.00  newClosure
  0.00      0.46     0.00        1     0.00     0.00  newFunction
  0.00      0.46     0.00        1     0.00     0.00  newNative
  0.00      0.46     0.00        1     0.00     0.00  parseVariable
  0.00      0.46     0.00        1     0.00     0.00  printObject
  0.00      0.46     0.00        1     0.00     0.00  readFile
  0.00      0.46     0.00        1     0.00     0.00  resetStack
  0.00      0.46     0.00        1     0.00     0.00  run
  0.00      0.46     0.00        1     0.00   460.17  runFile
  0.00      0.46     0.00        1     0.00     0.03  string
  0.00      0.46     0.00        1     0.00     0.00  string
  0.00      0.46     0.00        1     0.00     0.05  varDeclaration

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 2.17% of 0.46 seconds

index % time    self  children    called     name
                0.00    0.46       1/1           interpret [2]
[1]    100.0    0.00    0.46       1         compile [1]
                0.00    0.46   10004/10004       declaration [5]
                0.00    0.00       1/1           endCompiler [26]
                0.00    0.00   10005/60027       match [32]
                0.00    0.00       1/1           initScanner [89]
                0.00    0.00       1/1           initCompiler [88]
                0.00    0.00       1/40023       advance [35]
-----------------------------------------------
                0.00    0.46       1/1           runFile [3]
[2]    100.0    0.00    0.46       1         interpret [2]
                0.00    0.46       1/1           compile [1]
                0.00    0.00       2/20023       push [42]
                0.00    0.00       1/1           newClosure [92]
                0.00    0.00       1/20021       pop [43]
                0.00    0.00       1/1           call [81]
                0.00    0.00       1/1           run [99]
-----------------------------------------------
                0.00    0.46       1/1           main [4]
[3]    100.0    0.00    0.46       1         runFile [3]
                0.00    0.46       1/1           interpret [2]
                0.00    0.00       1/1           readFile [97]
-----------------------------------------------
                                                 <spontaneous>
[4]    100.0    0.00    0.46                 main [4]
                0.00    0.46       1/1           runFile [3]
                0.00    0.00       1/1           initVM [90]
                0.00    0.00       1/1           freeVM [87]
-----------------------------------------------
                0.00    0.46   10004/10004       compile [1]
[5]    100.0    0.00    0.46   10004         declaration [5]
                0.00    0.46   10003/10003       statement [7]
                0.00    0.00       1/1           varDeclaration [19]
                0.00    0.00   30012/60027       match [32]
-----------------------------------------------
                0.00    0.46   10003/10003       statement [7]
[6]    100.0    0.00    0.46   10003         printStatement [6]
                0.00    0.38   10003/10004       expression [11]
                0.00    0.08   10003/20019       emitByte [16]
                0.00    0.00   10003/10007       consume [47]
-----------------------------------------------
                0.00    0.46   10003/10003       declaration [5]
[7]    100.0    0.00    0.46   10003         statement [7]
                0.00    0.46   10003/10003       printStatement [6]
                0.00    0.00   10003/60027       match [32]
-----------------------------------------------
                0.45    0.00   59517/59517       writeChunk [9]
[8]     97.8    0.45    0.00   59517         isLineAdded [8]
-----------------------------------------------
                0.00    0.15   20019/59517       emitByte [16]
                0.00    0.30   39498/59517       writeConstant [14]
[9]     97.8    0.00    0.45   59517         writeChunk [9]
                0.45    0.00   59517/59517       isLineAdded [8]
                0.00    0.00      27/70          reallocate [56]
-----------------------------------------------
[10]    83.6    0.00    0.38   10004+20004   <cycle 1 as a whole> [10]
                0.00    0.31   20006             parsePrecedence <cycle 1> [12]
                0.00    0.08   10001             unary <cycle 1> [17]
                0.00    0.00       1             binary <cycle 1> [27]
-----------------------------------------------
                0.00    0.00       1/10004       varDeclaration [19]
                0.00    0.38   10003/10004       printStatement [6]
[11]    83.6    0.00    0.38   10004         expression [11]
                0.00    0.38   10004/10004       parsePrecedence <cycle 1> [12]
-----------------------------------------------
                                   1             binary <cycle 1> [27]
                               10001             unary <cycle 1> [17]
                0.00    0.38   10004/10004       expression [11]
[12]    67.1    0.00    0.31   20006         parsePrecedence <cycle 1> [12]
                0.00    0.31   10001/10001       number [15]
                0.00    0.00       3/3           variable [21]
                0.00    0.00       1/1           string [22]
                0.00    0.00       2/2           call [23]
                0.00    0.00   40018/40019       getRule [40]
                0.00    0.00   20009/40023       advance [35]
                0.00    0.00   10004/60027       match [32]
                               10001             unary <cycle 1> [17]
                                   1             binary <cycle 1> [27]
-----------------------------------------------
                0.00    0.00       1/10002       string [22]
                0.00    0.31   10001/10002       number [15]
[13]    67.1    0.00    0.31   10002         emitConstant [13]
                0.01    0.30   10002/10002       writeConstant [14]
                0.00    0.00   10002/30025       currentChunk [41]
-----------------------------------------------
                0.01    0.30   10002/10002       emitConstant [13]
[14]    67.1    0.01    0.30   10002         writeConstant [14]
                0.00    0.30   39498/59517       writeChunk [9]
                0.00    0.00   10002/20023       push [42]
                0.00    0.00   10002/10006       writeValueArray [49]
                0.00    0.00   10002/20021       pop [43]
-----------------------------------------------
                0.00    0.31   10001/10001       parsePrecedence <cycle 1> [12]
[15]    67.1    0.00    0.31   10001         number [15]
                0.00    0.31   10001/10002       emitConstant [13]
                0.00    0.00   10001/10001       numToValue [54]
-----------------------------------------------
                0.00    0.00       1/20019       binary <cycle 1> [27]
                0.00    0.00       2/20019       emitReturn [25]
                0.00    0.00      12/20019       emitBytes [18]
                0.00    0.08   10001/20019       unary <cycle 1> [17]
                0.00    0.08   10003/20019       printStatement [6]
[16]    32.9    0.00    0.15   20019         emitByte [16]
                0.00    0.15   20019/59517       writeChunk [9]
                0.00    0.00   20019/30025       currentChunk [41]
-----------------------------------------------
                               10001             parsePrecedence <cycle 1> [12]
[17]    16.4    0.00    0.08   10001         unary <cycle 1> [17]
                0.00    0.08   10001/20019       emitByte [16]
                               10001             parsePrecedence <cycle 1> [12]
-----------------------------------------------
                0.00    0.00       1/6           defineVariable [24]
                0.00    0.00       2/6           call [23]
                0.00    0.00       3/6           namedVariable [20]
[18]     0.0    0.00    0.00       6         emitBytes [18]
                0.00    0.00      12/20019       emitByte [16]
-----------------------------------------------
                0.00    0.00       1/1           declaration [5]
[19]     0.0    0.00    0.00       1         varDeclaration [19]
                0.00    0.00       1/10004       expression [11]
                0.00    0.00       1/1           defineVariable [24]
                0.00    0.00       1/1           parseVariable [95]
                0.00    0.00       1/60027       match [32]
                0.00    0.00       1/10007       consume [47]
-----------------------------------------------
                0.00    0.00       3/3           variable [21]
[20]     0.0    0.00    0.00       3         namedVariable [20]
                0.00    0.00       3/6           emitBytes [18]
                0.00    0.00       3/3           resolveLocal [71]
                0.00    0.00       3/3           resolveUpvalue [72]
                0.00    0.00       3/4           identifierConstant [67]
                0.00    0.00       2/60027       match [32]
-----------------------------------------------
                0.00    0.00       3/3           parsePrecedence <cycle 1> [12]
[21]     0.0    0.00    0.00       3         variable [21]
                0.00    0.00       3/3           namedVariable [20]
-----------------------------------------------
                0.00    0.00       1/1           parsePrecedence <cycle 1> [12]
[22]     0.0    0.00    0.00       1         string [22]
                0.00    0.00       1/10002       emitConstant [13]
                0.00    0.00       1/7           copyString [59]
-----------------------------------------------
                0.00    0.00       2/2           parsePrecedence <cycle 1> [12]
[23]     0.0    0.00    0.00       2         call [23]
                0.00    0.00       2/6           emitBytes [18]
                0.00    0.00       2/2           argumentList [75]
-----------------------------------------------
                0.00    0.00       1/1           varDeclaration [19]
[24]     0.0    0.00    0.00       1         defineVariable [24]
                0.00    0.00       1/6           emitBytes [18]
-----------------------------------------------
                0.00    0.00       1/1           endCompiler [26]
[25]     0.0    0.00    0.00       1         emitReturn [25]
                0.00    0.00       2/20019       emitByte [16]
-----------------------------------------------
                0.00    0.00       1/1           compile [1]
[26]     0.0    0.00    0.00       1         endCompiler [26]
                0.00    0.00       1/1           emitReturn [25]
-----------------------------------------------
                                   1             parsePrecedence <cycle 1> [12]
[27]     0.0    0.00    0.00       1         binary <cycle 1> [27]
                0.00    0.00       1/20019       emitByte [16]
                0.00    0.00       1/40019       getRule [40]
                                   1             parsePrecedence <cycle 1> [12]
-----------------------------------------------
                0.00    0.00      23/149348      string [100]
                0.00    0.00   29244/149348      number [55]
                0.00    0.00   60035/149348      skipWhitespace [39]
                0.00    0.00   60046/149348      identifier [45]
[28]     0.0    0.00    0.00  149348         peek [28]
-----------------------------------------------
                0.00    0.00      12/109317      string [100]
                0.00    0.00    9242/109317      number [55]
                0.00    0.00   20012/109317      skipWhitespace [39]
                0.00    0.00   40021/109317      scanToken [38]
                0.00    0.00   40030/109317      identifier [45]
[29]     0.0    0.00    0.00  109317         advance [29]
-----------------------------------------------
                0.00    0.00   40021/90059       scanToken [38]
                0.00    0.00   50038/90059       identifier [45]
[30]     0.0    0.00    0.00   90059         isAlpha [30]
-----------------------------------------------
                0.00    0.00       2/60029       argumentList [75]
                0.00    0.00   60027/60029       match [32]
[31]     0.0    0.00    0.00   60029         check [31]
-----------------------------------------------
                0.00    0.00       1/60027       varDeclaration [19]
                0.00    0.00       2/60027       namedVariable [20]
                0.00    0.00   10003/60027       statement [7]
                0.00    0.00   10004/60027       parsePrecedence <cycle 1> [12]
                0.00    0.00   10005/60027       compile [1]
                0.00    0.00   30012/60027       declaration [5]
[32]     0.0    0.00    0.00   60027         match [32]
                0.00    0.00   60027/60029       check [31]
                0.00    0.00   10006/40023       advance [35]
-----------------------------------------------
                0.00    0.00   10008/59264       identifier [45]
                0.00    0.00   19243/59264       number [55]
                0.00    0.00   30013/59264       scanToken [38]
[33]     0.0    0.00    0.00   59264         isDigit [33]
-----------------------------------------------
                0.00    0.00       1/40036       match [91]
                0.00    0.00      12/40036       string [100]
                0.00    0.00   40023/40036       scanToken [38]
[34]     0.0    0.00    0.00   40036         isAtEnd [34]
-----------------------------------------------
                0.00    0.00       1/40023       compile [1]
                0.00    0.00   10006/40023       match [32]
                0.00    0.00   10007/40023       consume [47]
                0.00    0.00   20009/40023       parsePrecedence <cycle 1> [12]
[35]     0.0    0.00    0.00   40023         advance [35]
                0.00    0.00   40023/40023       scanToken [38]
-----------------------------------------------
                0.00    0.00       1/40023       string [100]
                0.00    0.00   10001/40023       number [55]
                0.00    0.00   10008/40023       identifier [45]
                0.00    0.00   20013/40023       scanToken [38]
[36]     0.0    0.00    0.00   40023         makeToken [36]
-----------------------------------------------
                0.00    0.00   40023/40023       skipWhitespace [39]
[37]     0.0    0.00    0.00   40023         noneToken [37]
-----------------------------------------------
                0.00    0.00   40023/40023       advance [35]
[38]     0.0    0.00    0.00   40023         scanToken [38]
                0.00    0.00   40023/40023       skipWhitespace [39]
                0.00    0.00   40023/40036       isAtEnd [34]
                0.00    0.00   40021/109317      advance [29]
                0.00    0.00   40021/90059       isAlpha [30]
                0.00    0.00   30013/59264       isDigit [33]
                0.00    0.00   20013/40023       makeToken [36]
                0.00    0.00   10008/10008       identifier [45]
                0.00    0.00   10001/10001       number [55]
                0.00    0.00       1/1           match [91]
                0.00    0.00       1/1           string [100]
-----------------------------------------------
                0.00    0.00   40023/40023       scanToken [38]
[39]     0.0    0.00    0.00   40023         skipWhitespace [39]
                0.00    0.00   60035/149348      peek [28]
                0.00    0.00   40023/40023       noneToken [37]
                0.00    0.00   20012/109317      advance [29]
-----------------------------------------------
                0.00    0.00       1/40019       binary <cycle 1> [27]
                0.00    0.00   40018/40019       parsePrecedence <cycle 1> [12]
[40]     0.0    0.00    0.00   40019         getRule [40]
-----------------------------------------------
                0.00    0.00       4/30025       makeConstant [69]
                0.00    0.00   10002/30025       emitConstant [13]
                0.00    0.00   20019/30025       emitByte [16]
[41]     0.0    0.00    0.00   30025         currentChunk [41]
-----------------------------------------------
                0.00    0.00       2/20023       defineNative [84]
                0.00    0.00       2/20023       callValue [76]
                0.00    0.00       2/20023       interpret [2]
                0.00    0.00       4/20023       addConstant [65]
                0.00    0.00       4/20023       allocateString [66]
                0.00    0.00   10002/20023       writeConstant [14]
                0.00    0.00   10007/20023       run [99]
[42]     0.0    0.00    0.00   20023         push [42]
-----------------------------------------------
                0.00    0.00       1/20021       interpret [2]
                0.00    0.00       2/20021       defineNative [84]
                0.00    0.00       4/20021       addConstant [65]
                0.00    0.00       4/20021       allocateString [66]
                0.00    0.00   10002/20021       writeConstant [14]
                0.00    0.00   10008/20021       run [99]
[43]     0.0    0.00    0.00   20021         pop [43]
-----------------------------------------------
                0.00    0.00   10008/10008       identifierType [46]
[44]     0.0    0.00    0.00   10008         checkKeyword [44]
-----------------------------------------------
                0.00    0.00   10008/10008       scanToken [38]
[45]     0.0    0.00    0.00   10008         identifier [45]
                0.00    0.00   60046/149348      peek [28]
                0.00    0.00   50038/90059       isAlpha [30]
                0.00    0.00   40030/109317      advance [29]
                0.00    0.00   10008/59264       isDigit [33]
                0.00    0.00   10008/10008       identifierType [46]
                0.00    0.00   10008/40023       makeToken [36]
-----------------------------------------------
                0.00    0.00   10008/10008       identifier [45]
[46]     0.0    0.00    0.00   10008         identifierType [46]
                0.00    0.00   10008/10008       checkKeyword [44]
-----------------------------------------------
                0.00    0.00       1/10007       parseVariable [95]
                0.00    0.00       1/10007       varDeclaration [19]
                0.00    0.00       2/10007       argumentList [75]
                0.00    0.00   10003/10007       printStatement [6]
[47]     0.0    0.00    0.00   10007         consume [47]
                0.00    0.00   10007/40023       advance [35]
-----------------------------------------------
                0.00    0.00   10006/10006       run [99]
[48]     0.0    0.00    0.00   10006         peek [48]
-----------------------------------------------
                0.00    0.00       4/10006       addConstant [65]
                0.00    0.00   10002/10006       writeConstant [14]
[49]     0.0    0.00    0.00   10006         writeValueArray [49]
                0.00    0.00      13/70          reallocate [56]
-----------------------------------------------
                0.00    0.00       2/10004       clockNative [77]
                0.00    0.00   10002/10004       run [99]
[50]     0.0    0.00    0.00   10004         numToValue [50]
-----------------------------------------------
                0.00    0.00   10003/10003       run [99]
[51]     0.0    0.00    0.00   10003         printValue [51]
                0.00    0.00   10002/10002       valueToNum [53]
                0.00    0.00       1/1           printObject [96]
-----------------------------------------------
                0.00    0.00   10003/10003       run [99]
[52]     0.0    0.00    0.00   10003         valueToNum [52]
-----------------------------------------------
                0.00    0.00   10002/10002       printValue [51]
[53]     0.0    0.00    0.00   10002         valueToNum [53]
-----------------------------------------------
                0.00    0.00   10001/10001       number [15]
[54]     0.0    0.00    0.00   10001         numToValue [54]
-----------------------------------------------
                0.00    0.00   10001/10001       scanToken [38]
[55]     0.0    0.00    0.00   10001         number [55]
                0.00    0.00   29244/149348      peek [28]
                0.00    0.00   19243/59264       isDigit [33]
                0.00    0.00   10001/40023       makeToken [36]
                0.00    0.00    9242/109317      advance [29]
-----------------------------------------------
                0.00    0.00       1/70          newClosure [92]
                0.00    0.00       2/70          freeChunk [85]
                0.00    0.00       2/70          freeTable [78]
                0.00    0.00       2/70          freeValueArray [79]
                0.00    0.00       4/70          copyString [59]
                0.00    0.00       4/70          adjustCapacity [74]
                0.00    0.00       7/70          allocateObject [58]
                0.00    0.00       8/70          freeObject [60]
                0.00    0.00      13/70          writeValueArray [49]
                0.00    0.00      27/70          writeChunk [9]
[56]     0.0    0.00    0.00      70         reallocate [56]
-----------------------------------------------
                0.00    0.00       3/9           tableGet [73]
                0.00    0.00       6/9           tableSet [64]
[57]     0.0    0.00    0.00       9         findEntry [57]
-----------------------------------------------
                0.00    0.00       1/7           newClosure [92]
                0.00    0.00       1/7           newFunction [93]
                0.00    0.00       1/7           newNative [94]
                0.00    0.00       4/7           allocateString [66]
[58]     0.0    0.00    0.00       7         allocateObject [58]
                0.00    0.00       7/70          reallocate [56]
-----------------------------------------------
                0.00    0.00       1/7           string [22]
                0.00    0.00       1/7           defineNative [84]
                0.00    0.00       1/7           initVM [90]
                0.00    0.00       4/7           identifierConstant [67]
[59]     0.0    0.00    0.00       7         copyString [59]
                0.00    0.00       7/7           hashString [61]
                0.00    0.00       7/7           tableFindString [62]
                0.00    0.00       4/70          reallocate [56]
                0.00    0.00       4/4           allocateString [66]
-----------------------------------------------
                0.00    0.00       7/7           freeObjects [86]
[60]     0.0    0.00    0.00       7         freeObject [60]
                0.00    0.00       8/70          reallocate [56]
                0.00    0.00       1/1           freeChunk [85]
-----------------------------------------------
                0.00    0.00       7/7           copyString [59]
[61]     0.0    0.00    0.00       7         hashString [61]
-----------------------------------------------
                0.00    0.00       7/7           copyString [59]
[62]     0.0    0.00    0.00       7         tableFindString [62]
-----------------------------------------------
                0.00    0.00       2/6           freeValueArray [79]
                0.00    0.00       4/6           initChunk [80]
[63]     0.0    0.00    0.00       6         initValueArray [63]
-----------------------------------------------
                0.00    0.00       1/6           defineNative [84]
                0.00    0.00       1/6           run [99]
                0.00    0.00       4/6           allocateString [66]
[64]     0.0    0.00    0.00       6         tableSet [64]
                0.00    0.00       6/9           findEntry [57]
                0.00    0.00       2/2           adjustCapacity [74]
-----------------------------------------------
                0.00    0.00       4/4           makeConstant [69]
[65]     0.0    0.00    0.00       4         addConstant [65]
                0.00    0.00       4/20023       push [42]
                0.00    0.00       4/20021       pop [43]
                0.00    0.00       4/10006       writeValueArray [49]
-----------------------------------------------
                0.00    0.00       4/4           copyString [59]
[66]     0.0    0.00    0.00       4         allocateString [66]
                0.00    0.00       4/7           allocateObject [58]
                0.00    0.00       4/20023       push [42]
                0.00    0.00       4/20021       pop [43]
                0.00    0.00       4/6           tableSet [64]
-----------------------------------------------
                0.00    0.00       1/4           parseVariable [95]
                0.00    0.00       3/4           namedVariable [20]
[67]     0.0    0.00    0.00       4         identifierConstant [67]
                0.00    0.00       4/7           copyString [59]
                0.00    0.00       4/4           makeConstant [69]
-----------------------------------------------
                0.00    0.00       2/4           freeTable [78]
                0.00    0.00       2/4           initVM [90]
[68]     0.0    0.00    0.00       4         initTable [68]
-----------------------------------------------
                0.00    0.00       4/4           identifierConstant [67]
[69]     0.0    0.00    0.00       4         makeConstant [69]
                0.00    0.00       4/30025       currentChunk [41]
                0.00    0.00       4/4           addConstant [65]
-----------------------------------------------
                0.00    0.00       3/3           resolveLocal [71]
[70]     0.0    0.00    0.00       3         identifiersEqual [70]
-----------------------------------------------
                0.00    0.00       3/3           namedVariable [20]
[71]     0.0    0.00    0.00       3         resolveLocal [71]
                0.00    0.00       3/3           identifiersEqual [70]
-----------------------------------------------
                0.00    0.00       3/3           namedVariable [20]
[72]     0.0    0.00    0.00       3         resolveUpvalue [72]
-----------------------------------------------
                0.00    0.00       3/3           run [99]
[73]     0.0    0.00    0.00       3         tableGet [73]
                0.00    0.00       3/9           findEntry [57]
-----------------------------------------------
                0.00    0.00       2/2           tableSet [64]
[74]     0.0    0.00    0.00       2         adjustCapacity [74]
                0.00    0.00       4/70          reallocate [56]
-----------------------------------------------
                0.00    0.00       2/2           call [23]
[75]     0.0    0.00    0.00       2         argumentList [75]
                0.00    0.00       2/60029       check [31]
                0.00    0.00       2/10007       consume [47]
-----------------------------------------------
                0.00    0.00       2/2           run [99]
[76]     0.0    0.00    0.00       2         callValue [76]
                0.00    0.00       2/2           clockNative [77]
                0.00    0.00       2/20023       push [42]
-----------------------------------------------
                0.00    0.00       2/2           callValue [76]
[77]     0.0    0.00    0.00       2         clockNative [77]
                0.00    0.00       2/10004       numToValue [50]
-----------------------------------------------
                0.00    0.00       2/2           freeVM [87]
[78]     0.0    0.00    0.00       2         freeTable [78]
                0.00    0.00       2/70          reallocate [56]
                0.00    0.00       2/4           initTable [68]
-----------------------------------------------
                0.00    0.00       2/2           freeChunk [85]
[79]     0.0    0.00    0.00       2         freeValueArray [79]
                0.00    0.00       2/70          reallocate [56]
                0.00    0.00       2/6           initValueArray [63]
-----------------------------------------------
                0.00    0.00       1/2           freeChunk [85]
                0.00    0.00       1/2           newFunction [93]
[80]     0.0    0.00    0.00       2         initChunk [80]
                0.00    0.00       4/6           initValueArray [63]
-----------------------------------------------
                0.00    0.00       1/1           interpret [2]
[81]     0.0    0.00    0.00       1         call [81]
-----------------------------------------------
                0.00    0.00       1/1           run [99]
[82]     0.0    0.00    0.00       1         closeUpvalues [82]
-----------------------------------------------
                0.00    0.00       1/1           parseVariable [95]
[83]     0.0    0.00    0.00       1         declareVariable [83]
-----------------------------------------------
                0.00    0.00       1/1           initVM [90]
[84]     0.0    0.00    0.00       1         defineNative [84]
                0.00    0.00       2/20023       push [42]
                0.00    0.00       2/20021       pop [43]
                0.00    0.00       1/7           copyString [59]
                0.00    0.00       1/1           newNative [94]
                0.00    0.00       1/6           tableSet [64]
-----------------------------------------------
                0.00    0.00       1/1           freeObject [60]
[85]     0.0    0.00    0.00       1         freeChunk [85]
                0.00    0.00       2/70          reallocate [56]
                0.00    0.00       2/2           freeValueArray [79]
                0.00    0.00       1/2           initChunk [80]
-----------------------------------------------
                0.00    0.00       1/1           freeVM [87]
[86]     0.0    0.00    0.00       1         freeObjects [86]
                0.00    0.00       7/7           freeObject [60]
-----------------------------------------------
                0.00    0.00       1/1           main [4]
[87]     0.0    0.00    0.00       1         freeVM [87]
                0.00    0.00       2/2           freeTable [78]
                0.00    0.00       1/1           freeObjects [86]
-----------------------------------------------
                0.00    0.00       1/1           compile [1]
[88]     0.0    0.00    0.00       1         initCompiler [88]
                0.00    0.00       1/1           newFunction [93]
-----------------------------------------------
                0.00    0.00       1/1           compile [1]
[89]     0.0    0.00    0.00       1         initScanner [89]
-----------------------------------------------
                0.00    0.00       1/1           main [4]
[90]     0.0    0.00    0.00       1         initVM [90]
                0.00    0.00       2/4           initTable [68]
                0.00    0.00       1/1           resetStack [98]
                0.00    0.00       1/7           copyString [59]
                0.00    0.00       1/1           defineNative [84]
-----------------------------------------------
                0.00    0.00       1/1           scanToken [38]
[91]     0.0    0.00    0.00       1         match [91]
                0.00    0.00       1/40036       isAtEnd [34]
-----------------------------------------------
                0.00    0.00       1/1           interpret [2]
[92]     0.0    0.00    0.00       1         newClosure [92]
                0.00    0.00       1/70          reallocate [56]
                0.00    0.00       1/7           allocateObject [58]
-----------------------------------------------
                0.00    0.00       1/1           initCompiler [88]
[93]     0.0    0.00    0.00       1         newFunction [93]
                0.00    0.00       1/7           allocateObject [58]
                0.00    0.00       1/2           initChunk [80]
-----------------------------------------------
                0.00    0.00       1/1           defineNative [84]
[94]     0.0    0.00    0.00       1         newNative [94]
                0.00    0.00       1/7           allocateObject [58]
-----------------------------------------------
                0.00    0.00       1/1           varDeclaration [19]
[95]     0.0    0.00    0.00       1         parseVariable [95]
                0.00    0.00       1/10007       consume [47]
                0.00    0.00       1/1           declareVariable [83]
                0.00    0.00       1/4           identifierConstant [67]
-----------------------------------------------
                0.00    0.00       1/1           printValue [51]
[96]     0.0    0.00    0.00       1         printObject [96]
-----------------------------------------------
                0.00    0.00       1/1           runFile [3]
[97]     0.0    0.00    0.00       1         readFile [97]
-----------------------------------------------
                0.00    0.00       1/1           initVM [90]
[98]     0.0    0.00    0.00       1         resetStack [98]
-----------------------------------------------
                0.00    0.00       1/1           interpret [2]
[99]     0.0    0.00    0.00       1         run [99]
                0.00    0.00   10008/20021       pop [43]
                0.00    0.00   10007/20023       push [42]
                0.00    0.00   10006/10006       peek [48]
                0.00    0.00   10003/10003       valueToNum [52]
                0.00    0.00   10003/10003       printValue [51]
                0.00    0.00   10002/10004       numToValue [50]
                0.00    0.00       3/3           tableGet [73]
                0.00    0.00       2/2           callValue [76]
                0.00    0.00       1/6           tableSet [64]
                0.00    0.00       1/1           closeUpvalues [82]
-----------------------------------------------
                0.00    0.00       1/1           scanToken [38]
[100]    0.0    0.00    0.00       1         string [100]
                0.00    0.00      23/149348      peek [28]
                0.00    0.00      12/109317      advance [29]
                0.00    0.00      12/40036       isAtEnd [34]
                0.00    0.00       1/40023       makeToken [36]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [65] addConstant            [78] freeTable              [12] parsePrecedence
  [74] adjustCapacity         [87] freeVM                 [95] parseVariable
  [35] advance                [79] freeValueArray         [28] peek
  [29] advance                [40] getRule                [48] peek
  [58] allocateObject         [61] hashString             [43] pop
  [66] allocateString         [45] identifier             [96] printObject
  [75] argumentList           [67] identifierConstant      [6] printStatement
  [27] binary                 [46] identifierType         [51] printValue
  [23] call                   [70] identifiersEqual       [42] push
  [81] call                   [80] initChunk              [97] readFile
  [76] callValue              [88] initCompiler           [56] reallocate
  [31] check                  [89] initScanner            [98] resetStack
  [44] checkKeyword           [68] initTable              [71] resolveLocal
  [77] clockNative            [90] initVM                 [72] resolveUpvalue
  [82] closeUpvalues          [63] initValueArray         [99] run
   [1] compile                 [2] interpret               [3] runFile
  [47] consume                [30] isAlpha                [38] scanToken
  [59] copyString             [34] isAtEnd                [39] skipWhitespace
  [41] currentChunk           [33] isDigit                 [7] statement
   [5] declaration             [8] isLineAdded            [22] string
  [83] declareVariable        [69] makeConstant          [100] string
  [84] defineNative           [36] makeToken              [62] tableFindString
  [24] defineVariable         [32] match                  [73] tableGet
  [16] emitByte               [91] match                  [64] tableSet
  [18] emitBytes              [20] namedVariable          [17] unary
  [13] emitConstant           [92] newClosure             [53] valueToNum
  [25] emitReturn             [93] newFunction            [52] valueToNum
  [26] endCompiler            [94] newNative              [19] varDeclaration
  [11] expression             [37] noneToken              [21] variable
  [57] findEntry              [54] numToValue              [9] writeChunk
  [85] freeChunk              [50] numToValue             [14] writeConstant
  [60] freeObject             [15] number                 [49] writeValueArray
  [86] freeObjects            [55] number                 [10] <cycle 1>
