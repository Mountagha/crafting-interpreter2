chap15-chall2
We can substitute an OP_SUBSTRACT by a combination of an OP_NEGATE and an OP_ADD.
this would reduce the bytecode instructions set but would make the generated bytecode
longer. (2 instructions instead of one for each -)
In term of performance after timing some execution we did not notice any improvement. Seems like
it does not optimize execution. We kept the changement there but commented it.

chap15-chall4
doing the negation on place seems to save a bit of time. OP_NOT could benefit of the same 
optimization. (notice it by observing time taken to compute fibonnacci.)

chap15-chall3
the handling of dynamic stack size is more complicated now as we have already added lot of other 
functionality (like GC). Will come back to it later. Incha allah ;)